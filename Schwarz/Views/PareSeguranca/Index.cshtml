@using Microsoft.AspNetCore.Identity
@using Schwarz.Areas.Identity.Data
@using Schwarz.Services.Interfaces
@using Schwarz.Statics

@inject IUserService UserService
@inject SignInManager<SchwarzUser> SignInManager
@model IEnumerable<PareSeguranca>

@{
    ViewData["Title"] = "Registros";
}

<div class="-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto my-4">
    <div class="bg-white inline-block min-w-full shadow rounded-lg overflow-hidden p-5">
        <table id="tableSeguranca">
            <thead>
                <tr>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Data)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Funcionario.Nome)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Local)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Desvio)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.ClassificacaoGUT)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        @Html.DisplayNameFor(model => model.Pontuacao)
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Fotos
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Ações
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-id="@item.IDPareSeguranca">
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.Data)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.Funcionario.Nome)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.Local)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.Desvio)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm" data-label="Status">
                            @{
                                string cor;
                                switch (item.Status)
                                {
                                    case StatusPare.AcaoValidada:
                                        cor = "text-green-500";
                                        break;
                                    case StatusPare.EmAnalise or StatusPare.AcaoPendente or StatusPare.AprovadoSeguranca or StatusPare.AcaoConcluida:
                                        cor = "text-yellow-500";
                                        break;
                                    case StatusPare.ReprovadoSeguranca or StatusPare.AcaoInvalidada:
                                        cor = "text-red-500";
                                        break;
                                    default:
                                        cor = "";
                                        break;
                                }
                            }
                            <span class="@cor">@item.Status</span>
                        </td>

                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.ClassificacaoGUT)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @Html.DisplayFor(modelItem => item.Pontuacao)
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @foreach (var foto in item.PareSegurancaFotos)
                            {
                                <a href="data:@foto.TipoMIME;base64,@Convert.ToBase64String(foto.Conteudo)" download="@foto.Nome" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">@foto.Nome</a>
                            }
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            @if (User.IsInRole(Roles.PareSeguranca) || User.IsInRole(Roles.Admin))
                            {
                                <a class="text-black rounded-lg p-2 bg-white ring-2 ring-amber-800 shadow-lg space-y-3 hover:bg-amber-500 hover:text-white inline-block" asp-action="Edit" asp-route-id="@item.IDPareSeguranca">Editar</a>
                                <button class="btnDeletar text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-red-800 shadow-lg space-y-3 hover:bg-red-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Deletar</button>
                            }
                            @if (SignInManager.IsSignedIn(User))
                            {
                                @if (item.Status == StatusPare.EmAnalise && (item.Funcionario.FuncionarioLider.User.Id == UserService.GetUser(User).Id || User.IsInRole(Roles.Admin)))
                                {
                                    <button class="btnAprovar text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-green-800 shadow-lg space-y-3 hover:bg-green-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Aprovar</button>
                                    <button class="btnReprovar text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-red-800 shadow-lg space-y-3 hover:bg-red-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Reprovar</button>
                                }

                                @if ((item.Status == StatusPare.AprovadoSeguranca || item.Status == StatusPare.AcaoInvalidada) && ((item.Funcionario.FuncionarioLider.User.Id == UserService.GetUser(User).Id && SignInManager.IsSignedIn(User)) || User.IsInRole(Roles.Admin)))
                                {
                                    <button class="btnAcao text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-blue-800 shadow-lg space-y-3 hover:bg-blue-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Ação</button>
                                }
                                @if (item.Status == StatusPare.AcaoPendente && ((item.Funcionario.FuncionarioLider.User.Id == UserService.GetUser(User).Id && SignInManager.IsSignedIn(User)) || User.IsInRole(Roles.Admin)))
                                {
                                    <button class="btnConcluir text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-green-800 shadow-lg space-y-3 hover:bg-green-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Concluir</button>
                                }
                                @if (item.Status == StatusPare.AcaoConcluida && (User.IsInRole(Roles.PareSeguranca) || User.IsInRole(Roles.Admin)))
                                {
                                    <button class="btnValidar text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-green-800 shadow-lg space-y-3 hover:bg-green-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Validar</button>
                                    <button class="btnInvalidar text-black rounded-lg mt-2 p-2 bg-white ring-2 ring-yellow-800 shadow-lg space-y-3 hover:bg-yellow-600 hover:text-white inline-block" data-id="@item.IDPareSeguranca">Invalidar</button>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<dialog class="m-auto" id="dialogLider">
    <h3 class="pt-4 text-2xl text-center">Plano de Ação</h3>
    <div class="flex justify-center px-6 my-12">
        <form id="formPlanoAcao" method="post" class="px-8">
            <div class="mb-4">
                <label class="block mb-2 text-sm font-bold">Ação do Líder</label>
                <input required type="text" name="acao" id="acao" class="w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline" />
            </div>
            <div class="mb-4">
                <label class="block mb-2 text-sm font-bold">Ação Realizada?</label>
                <div class="flex items-center">
                    <input type="radio" id="realizadaSim" name="realizada" value="true" class="mr-2">
                    <label for="realizadaSim" class="mr-8">Sim</label>
                    <input type="radio" id="realizadaNao" name="realizada" value="false" class="mr-2" checked>
                    <label for="realizadaNao">Não</label>
                </div>
            </div>
            <div class="mb-4">
                <label class="block mb-2 text-sm font-bold">Prazo da Ação</label>
                <input type="datetime-local" name="prazoAcao" id="prazoAcao" class="w-full px-3 py-2 text-sm leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline" />
            </div>
            <div class="mb-4">
                <input required type="hidden" name="idAlertaCota" id="idAlertaCota" value="" />
                <input type="submit" value="Enviar" class="text-xl w-full px-4 py-4 font-bold text-white bg-gradient-to-r from-emerald-300 to-green-500 rounded-full hover:bg-gradient-to-r hover:from-emerald-300 hover:to-green-500 rounded-full hover:cursor-pointer focus:outline-none focus:shadow-outline" />
            </div>
        </form>
    </div>
</dialog>

<script>
    $(document).ready(function () {
        $.fn.dataTable.moment('DD/MM/YYYY');

        var table = $('#tableSeguranca').DataTable({
            "order": [],
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/pt-BR.json"
            },
            "dom": 'lBfrtip',
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
            "scrollY": "60vh",
            "scrollCollapse": true,
            "autoWidth": true,
            "responsive": true,
            "paging": true,
            "buttons": [
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel"></i> Excel',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'print',
                    text: '<i class="fa fa-print"></i> Imprimir',
                    className: 'btn btn-primary',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf"></i> PDF',
                    className: 'btn btn-danger',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                }
            ]
        });

        $('.btnDeletar').click(function () {
            if (confirm('Tem certeza que deseja deletar o PARE?')) {
                var pareId = $(this).data('id');
                $.ajax({
                    url: 'api/PareSeguranca/' + pareId,
                    method: 'DELETE',
                    success: function (data) {
                        var row = $('#tableSeguranca').row($('button[data-id="' + pareId + '"]').closest('tr'));
                        row.remove().draw();
                        alert('PARE deletado com sucesso!')
                    },
                    error: function (error) {
                        alert('Erro ao deletar o PARE: ' + error.responseText);
                    }
                });
            }
        });

        $('.btnAprovar').click(function () {
            var idPare = $(this).data('id');
            var confirmacao = confirm("Tem certeza de que deseja Aprovar este cadastro?");

            if (confirmacao) {
                var observacoes = prompt("Se houver, digite as observações");
                $.ajax({
                    url: 'api/PareSeguranca/Aprovar',
                    type: 'PUT',
                    data: { id: idPare, observacoes: observacoes },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        linha.find('td[data-label="Status"]').html("<span class='text-yellow-500'>Aprovado pela Segurança</span>");

                        $('.btnReprovar[data-id="' + idPare + '"]').hide();
                        $('.btnAprovar[data-id="' + idPare + '"]').hide();
                        alert('Aprovado com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao aprovar o PARE.');
                    }
                });
            }
        });

        $('.btnReprovar').click(function () {
            var idPare = $(this).data('id');
            var confirmacao = confirm("Tem certeza de que deseja Reprovar este cadastro?");

            if (confirmacao) {
                var observacoes = prompt("Se houver, digite as observações");
                $.ajax({
                    url: 'api/PareSeguranca/Reprovar',
                    type: 'PUT',
                    data: { id: idPare, observacoes: observacoes },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        linha.find('td[data-label="Status"]').html("<span class='text-red-500'>Reprovado pela Segurança</span>");

                        $('.btnReprovar[data-id="' + idPare + '"]').hide();
                        $('.btnAprovar[data-id="' + idPare + '"]').hide();
                        alert('Reprovado com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao Reprovar o PARE.');
                    }
                });
            }
        });

        $('.btnAcao').on('click', function () {
            var idPare = $(this).data('id');

            var dialog = document.getElementById('dialogLider');
            dialog.showModal();

            $('#formPlanoAcao').submit(function (event) {
                event.preventDefault();
                var acao = $('#acao').val();
                var prazoAcao = $('#prazoAcao').val();
                var realizada = $('input[name="realizada"]:checked').val() === "true";
                if (!realizada && prazoAcao == null) {
                    alert("Selecione o prazo da ação");
                    return false;
                }

                $.ajax({
                    url: 'api/PareSeguranca/PlanoAcao',
                    type: 'PUT',
                    data: { id: idPare, acao: acao, realizada: realizada, prazoAcao: prazoAcao },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        if (realizada) {
                            linha.find('td[data-label="Status"]').html("<span class='text-yellow-500'>Ação Concluída</span>");
                        }
                        else {
                            linha.find('td[data-label="Status"]').html("<span class='text-yellow-500'>Ação Pendente</span>");
                        }

                        $('.btnAcao[data-id="' + idPare + '"]').hide();
                        dialog.close();
                        alert('Ação registrada com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao Responder o cadastro.');
                    }
                });
            });
        });

        $('.btnConcluir').click(function () {
            var idPare = $(this).data('id');
            var confirmacao = confirm("Tem certeza de que deseja Concluir a ação deste cadastro?");

            if (confirmacao) {
                $.ajax({
                    url: 'api/PareSeguranca/Concluir',
                    type: 'PUT',
                    data: { id: idPare },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        linha.find('td[data-label="Status"]').html("<span class='text-yellow-500'>Ação Concluída</span>");

                        $('.btnConcluir[data-id="' + idPare + '"]').hide();
                        alert('Concluido com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao Concluir o PARE.');
                    }
                });
            }
        });

        $('.btnValidar').click(function () {
            var idPare = $(this).data('id');
            var confirmacao = confirm("Tem certeza de que deseja Validar este cadastro?");

            if (confirmacao) {
                var observacoes = prompt("Se houver, digite as observações");
                var classificacaoGut = 1;
                classificacaoGut = prompt("Digite a classificação GUT (1 a 5)");
                $.ajax({
                    url: 'api/PareSeguranca/Validar',
                    type: 'PUT',
                    data: { id: idPare, classificacaoGut: classificacaoGut, observacoes: observacoes },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        linha.find('td[data-label="Status"]').html("<span class='text-green-500'>Ação Validada</span>");

                        $('.btnValidar[data-id="' + idPare + '"]').hide();
                        $('.btnInvalidar[data-id="' + idPare + '"]').hide();
                        alert('Validado com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao Validar o PARE.');
                    }
                });
            }
        });

        $('.btnInvalidar').click(function () {
            var idPare = $(this).data('id');
            var confirmacao = confirm("Tem certeza de que deseja Invalidar este cadastro?");

            if (confirmacao) {
                var observacoes = prompt("Se houver, digite as observações");
                $.ajax({
                    url: 'api/PareSeguranca/Invalidar',
                    type: 'PUT',
                    data: { id: idPare, observacoes: observacoes },
                    success: function () {
                        var linha = $('#tableSeguranca').find('tr[data-id="' + idPare + '"]');
                        linha.find('td[data-label="Status"]').html("<span class='text-red-500'>Ação Invalidada</span>");

                        $('.btnValidar[data-id="' + idPare + '"]').hide();
                        $('.btnInvalidar[data-id="' + idPare + '"]').hide();
                        alert('Invalidado com sucesso!');
                    },
                    error: function () {
                        alert('Ocorreu um erro ao Invalidar o PARE.');
                    }
                });
            }
        });
    });

</script>