@using Microsoft.AspNetCore.Identity
@using Schwarz.Areas.Identity.Data

@inject SignInManager<SchwarzUser> SignInManager
@inject UserManager<SchwarzUser> UserManager

@if (SignInManager.IsSignedIn(User))
{

    <li>
        <a class="text-capitalize fs-5" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Olá @UserManager.Users.First(x => x.Id == UserManager.GetUserId(User)).Funcionario.Nome.ToLower()!</a>
    </li>
    <li>
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark bg-danger w-100 h-100 rounded-0">Sair</button>
        </form>
    </li>
    @if (User.IsInRole("Admin"))
    {
        <li>
            <a class="fs-4" id="register" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
        </li>
    }

}
else
{

    <li>
        <a class="fs-4" id="login" asp-area="Identity" asp-page="/Account/Login">Entrar</a>
    </li>
}
