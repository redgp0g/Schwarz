@using Microsoft.AspNetCore.Identity;
@using Schwarz.Areas.Identity.Data;
@model IEnumerable<Ideia>
@{
	List<string> equipe = new();
}
@inject SignInManager<SchwarzUser> SignInManager
@inject UserManager<SchwarzUser> UserManager
<head>
	<link rel="stylesheet" href="~/css/tabela.css" asp-append-version="true" />
</head>
<table class="table table-sortable" id="table-falhas">
	<thead>
		<tr>
			<th>
				Equipe
			</th>
			<th>
				Data
			</th>
			<th>
				Descrição
			</th>
			<th>
				Status
			</th>
			<th>
				Ganho
			</th>
			<th>
				Investimento
			</th>
			<th class="acoes">
				Ações
			</th>

		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			equipe.Clear();
			foreach(var func in item.EquipeIdeia)
			{
				equipe.Add(func.Funcionario.Nome);
			}
			<tr>
				<td data-label="Equipe:">
					@string.Join(", ", equipe)
				</td>
				<td data-label="Data:">
					@Html.DisplayFor(modelItem => item.Data)
				</td>
				<td data-label="Descrição:">
					@Html.DisplayFor(modelItem => item.Descricao)
				</td>
				<td data-label="Status:">
					@Html.DisplayFor(modelItem => item.Status)
				</td>
				<td data-label="Ganho:">
					@Html.DisplayFor(modelItem => item.Ganho)
				</td>
				<td data-label="Investimento:">
					@Html.DisplayFor(modelItem => item.Investimento)
				</td>
				<td>
					@if (SignInManager.IsSignedIn(User) && UserManager.GetRolesAsync(UserManager.Users.First(x => x.Id == UserManager.GetUserId(User))).Result.Contains("Oleo"))
					{
						<a style="padding: 7px 10px;margin-top: 0;" class="btn btn-edit" asp-action="Edit" asp-route-id="@item.IDIdeia">Editar</a>
					}
					<a style="padding: 7px 10px;margin-top: 0;" class="btn btn-info" asp-action="Details" asp-route-id="@item.IDIdeia">Detalhes</a>
				</td>
			</tr>
		}
	</tbody>
</table>