@using Schwarz.Statics
@model IEnumerable<Ideia>
@{
    ViewData["Title"] = "Ideias";
    List<string> equipe = new();
}

@functions {
    public string PegaPrimeiroEUltimoNome(string nomeCompleto)
    {
        if (string.IsNullOrWhiteSpace(nomeCompleto))
            return nomeCompleto;

        var partes = nomeCompleto.Split(' ', StringSplitOptions.RemoveEmptyEntries);

        if (partes.Length == 1)
            return partes[0];

        return partes[0] + " " + partes[partes.Length - 1];
    }
}

<div class="container mx-auto px-4 sm:px-8">
    <div>
        <h2 class="text-2xl font-semibold leading-tight text-white pt-3">Painel de Ideias</h2>
    </div>
    <div class="my-2 flex sm:flex-row flex-col">
        <div class="flex flex-row mb-1 sm:mb-0">
            <div class="mr-12">
                <label for="filtrostatus" class="block font-medium text-white">Filtrar Status por:</label>
                <select id="filtrostatus" class="max-w-xs px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500"><option value="">Todos</option></select>
            </div>
            <div>
                <label for="filtroano" class="block font-medium text-white">Filtrar Ano por:</label>
                <select id="filtroano" class="max-w-xs px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500">
                    <option value="">Todos</option>
                    <option value="2024">2024</option>
                    <option value="2023">2023</option>
                    <option value="2022">2022</option>
                    <option value="2021">2021</option>
                    <option value="2020">2020</option>
                    <option value="2019">2019</option>
                </select>
            </div>
        </div>
        <a asp-action="Create" asp-controller="Ideia" class="transition ease-in-out hover:scale-110 group block max-w-xs ml-auto rounded-lg p-6 bg-white ring-1 ring-slate-900/5 shadow-lg space-y-3 hover:bg-red-600 hover:ring-red-800">
            <div class="flex items-center space-x-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 group-hover:text-white">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18" />
                </svg>

                <h3 class="text-slate-900 group-hover:text-white text-sm font-semibold">Cadastrar Ideia</h3>
            </div>
        </a>
    </div>

    <div class="-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto my-4">

        <div class="bg-white text-slate-600 inline-block min-w-full shadow rounded-lg overflow-hidden p-5">
            <table id="table-ideias" class="stripe row-border">
                    <thead class="bg-gray-100">
                    <tr class="px-5 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">
                            <th class="">
                            Equipe
                        </th>
                            <th class="">
                            Data
                        </th>
                            <th class="">
                            Descrição
                        </th>
                            <th class="">
                            Status
                        </th>
                            <th class="">
                            Ações
                        </th>

                    </tr>
                </thead>
                    <tbody class="bg-white text-slate-700">
                    @foreach (var item in Model)
                    {
                            <div>
                        <tr>
                            <td class="px-5 py-5 border-b border-gray-200 text-sm capitalize" style="white-space: nowrap;"data-label="Equipe:">
                                    @Html.Raw(string.Join("<br>", item.NomesEquipe.Select(nome => PegaPrimeiroEUltimoNome(nome))))
                            </td>

                                <td class="px-5 py-5 border-b border-gray-200 text-sm" data-label="Data:">
                                @Html.DisplayFor(modelItem => item.DataFormatada)
                            </td>
                            <td class="px-5 py-5 border-b border-gray-200 text-sm" data-label="Descrição:">
                                @Html.DisplayFor(modelItem => item.Descricao)
                            </td>
                            <td class="px-5 py-5 border-b text-center text-sm font-bold" data-label="Status:">
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                                <td class="px-5 py-5 border-b border-gray-200 text-sm text-center">
                                @if (User.IsInRole(Roles.IdeiaAdmin) || User.IsInRole(Roles.Admin))
                                {
                                    <a class="rounded-lg mt-2 p-2 bg-white text-slate-600 ring-2 ring-amber-800 shadow-lg space-y-3 hover:bg-amber-500 hover:text-white inline-block" asp-action="Edit" asp-route-id="@item.IDIdeia">Editar</a>
                                    <button class="btnDelete rounded-lg mt-2 p-2 bg-white text-slate-600 ring-2 ring-red-800 shadow-lg space-y-3 hover:bg-red-600 hover:text-white inline-block" data-id="@item.IDIdeia">Deletar</button>
                                }
                                <a class="rounded-lg mt-2 p-2 bg-white ring-2 bg-white text-slate-600 ring-blue-800 shadow-lg space-y-3 hover:bg-blue-600 hover:text-white inline-block" asp-action="Details" asp-route-id="@item.IDIdeia">Detalhes</a>
                            </td>
                        </tr>
                        </div>
                    }
                </tbody>
            </table>
        </div>
    </div>

<script>


        function getColorClass(statusIdeia) {
            let style = "";
            if (statusIdeia === "Aplicada") style += "color: #22c55e; ";
            if (statusIdeia === "Recebida") style += "color: #b88d00; ";
            if (statusIdeia === "Cancelada") style += "color: #ad2415; ";
            if (statusIdeia === "Em Processo") style += "color: #abc720; ";
            if (statusIdeia === "Aprovada") style += "color: #63c77b; ";
            if (statusIdeia === "Direcionada") style += "color: #b39944; ";

            return style.trim();
        }

    $(document).ready(function () {

        var table = $('#table-ideias').DataTable({
            "order": [],
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/pt-BR.json"
            },
            "dom": 'lBfrtip',
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
            "scrollY": "60vh",
            "scrollCollapse": true,
            "autoWidth": true,
            "responsive": true,
            "buttons": [
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel"></i> Excel',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                },
                {
                    extend: 'print',
                    text: '<i class="fa fa-print"></i> Imprimir',
                    className: 'btn btn-primary',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                },
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf"></i> PDF',
                    className: 'btn btn-danger',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                }
                ],
                "createdRow": function (row, data, index) {
                    var statusCell = $('td:eq(3)', row);
                    var statusText = statusCell.text().trim();

                    var colorStyle = getColorClass(statusText);
                    if (colorStyle) {
                        $(statusCell).attr('style', colorStyle + 'border-radius: 5px;');
                    }
                }

        });

        table.column(3).data().unique().sort().each(function (value, index) {
            $('#filtrostatus').append('<option value="' + value + '">' + value + '</option>');
        });

        $('#filtrostatus').on('change', function () {
            var filtro = $(this).val();

            table.column(3).search(filtro).draw();
        });

        $('#filtroano').on('change', function () {
            var filtro = $(this).val();

            table.column(1).search(filtro).draw();
        });

        $('.btnDelete').on('click', function () {
            var id = $(this).data('id');

            if (confirm('Deseja deletar esta ideia?')) {
                $.ajax({
                    type: 'DELETE',
                    url: 'api/Ideia/' + id,
                    success: function (data) {
                        var row = table.row($('button[data-id="' + id + '"]').closest('tr'));
                        row.remove().draw();
                        alert('Ideia deletada com sucesso!')
                    },
                    error: function (error) {
                        alert('Erro ao deletar a Ideia: ' + error.responseText);
                    }
                });
            }
        });
    });
</script>
